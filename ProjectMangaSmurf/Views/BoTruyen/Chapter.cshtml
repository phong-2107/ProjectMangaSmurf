@using ProjectMangaSmurf.Repository
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@inject IHttpContextAccessor HttpContextAccessor
@inject IChapterRepository ChapterRepository
@inject IboTruyenRepository boTruyenRepository
@inject IKhachHangRepository khachhangrepository
@model ProjectMangaSmurf.Models.Chapter


<link href="~/css/styleCT.css" rel="stylesheet" />
<link href="~/css/styleChapter.css" rel="stylesheet" />

<style>
   
    header {
        position: relative !important;
    }

    .show-btn{
          background: #fff;
          padding: 10px 20px;
          font-size: 20px;
          font-weight: 500;
          color: #3498db;
          cursor: pointer;
          box-shadow: 0px 0px 10px rgba(0,0,0,0.1);
        }
        .show-btn, .container_pop{
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
        }
        input[type="checkbox"]{
          display: none;
        }
        .container_pop{
          display: none;
          background: #fff;
          width: 410px;
          padding: 30px;
          box-shadow: 0 0 8px rgba(0,0,0,0.1);
          z-index: 100;
        }
        #show:checked ~ .container_pop{
          display: block;
        }
        .container_pop .close-btn{
          position: absolute;
          right: 20px;
          top: 15px;
          font-size: 18px;
          cursor: pointer;
        }
        .container_pop .close-btn:hover{
          color: #3498db;
        }
        .container_pop .text{
          font-size: 35px;
          font-weight: 600;
          text-align: center;
        }
        .container_pop form{
          margin-top: -20px;
        }
        .container_pop form .data{
          height: 45px;
          width: 100%;
          margin: 40px 0;
        }
        form .data label{
          font-size: 18px;
        }
        form .data input{
          height: 100%;
          width: 100%;
          padding-left: 10px;
          font-size: 17px;
          border: 1px solid silver;
        }
        form .data input:focus{
          border-color: #3498db;
          border-bottom-width: 2px;
        }
        form .forgot-pass{
          margin-top: -8px;
        }
        form .forgot-pass a{
          color: #3498db;
          text-decoration: none;
        }
        form .forgot-pass a:hover{
          text-decoration: underline;
        }
        form .btn{
          margin: 30px 0;
          height: 45px;
          width: 100%;
          position: relative;
          overflow: hidden;
        }
        form .btn .inner{
          height: 100%;
          width: 300%;
          position: absolute;
          left: -100%;
          z-index: -1;
          background: -webkit-linear-gradient(right, #56d8e4, #9f01ea, #56d8e4, #9f01ea);
          transition: all 0.4s;
        }
        form .btn:hover .inner{
          left: 0;
        }
        form .btn button{
          height: 100%;
          width: 100%;
          background: none;
          border: none;
          color: #fff;
          font-size: 18px;
          font-weight: 500;
          text-transform: uppercase;
          letter-spacing: 1px;
          cursor: pointer;
        }
        form .signup-link{
          text-align: center;
        }
        form .signup-link a{
          color: #3498db;
          text-decoration: none;
        }
        form .signup-link a:hover{
          text-decoration: underline;
        }

        .overlay {
          display: none;
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: rgba(0, 0, 0, 0.5); /* Màu nền mờ với độ trong suốt */
          z-index: 50; /* Đảm bảo overlay nằm trên nền nhưng dưới form */
      }
</style>


<div class="overlay" id="loginOverlay" style="display:none;"></div>
<div class="container_pop" id="loginForm" style="display:none;">
    <label for="show" class="close-btn fas fa-times" title="close"></label>
    <div class="text">
        Login Form
    </div>
    @* <form method="post" action="#">
        <input type="text" name="username" placeholder="Username" required />
        <input type="password" name="password" placeholder="Password" required />
        <button type="submit">Login</button>
    </form> *@
    <form method="post" asp-controller="KhachHang" asp-action="LoginPopup">
        <div class="data">
            <label>UserName</label>
            <input name="Taikhoan" type="text" required autocomplete="nope">
        </div>
        <div class="data">
            <label>Password</label>
            <input name="Matkhau" type="password" required autocomplete="new-password">
        </div>
        <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />
        <div class="forgot-pass">
            <a href="#">Forgot Password?</a>
        </div>
        <div class="btn">
            <div class="inner"></div>
            <button type="submit">login</button>
        </div>
        <div class="signup-link">
            Not a member? <a href="#">Signup now</a>
        </div>
    </form>

</div>
<div class="reading">
    <div class=" reading__container containers">
        <div class="links">
            <a class="home" asp-area="" asp-controller="BoTruyen" asp-action="Index"> <i class="ri-home-4-fill"></i> Trang chủ </a> / <a class="truyen" asp-action="CTBoTruyen" asp-route-id="@Model.IdBo">@Model.IdBo</a> / <a class="chapter" asp-action="Chapter" asp-route-id="@Model.IdBo" asp-route-stt="@Model.SttChap">Chap @Model.SttChap</a>
        </div>

        <div class="infor">
            <div class="detail">
                @{
                    var truyen = boTruyenRepository.GetByIdAsync(Model.IdBo);
                    if (truyen != null)
                    {
                        var demo = await truyen;
                        <h3 class="name">  @demo.TenBo - <span class="chapter">chap @Model.SttChap</span></h3>
                    }

                }

            </div>
            <span class="time">@Model.ThoiGian.ToString("dd-MM-yyyy")</span>
            <h4 class="note">@Model.TenChap</h4>
            <div class="btn__error">
                <a asp-area="" asp-controller="Contact" asp-action="Index" class="error">Báo lỗi</a>
            </div>
        </div>

    </div>
    <div class="control" id="control">
        <a asp-area="" asp-controller="BoTruyen" asp-action="Index" class="btn-home"><i class="ri-home-4-fill"></i></a>
        @{
            var sttchapMin = @Model.SttChap - 1;
            if (sttchapMin >= 1)
            {
                <a class="btn-pre" asp-action="Chapter" asp-route-id="@Model.IdBo" asp-route-stt="@sttchapMin"><i class="ri-arrow-left-s-line"></i></a>
            }
        }
        

        <div class="dropdown">
            <a class="btn dropdown-btn" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Chap @Model.SttChap <i class="ri-arrow-down-s-line"></i>
            </a>

            <ul class="dropdown-menu">
                @{
                    var listChapter = ChapterRepository.GetAllByIdAsync(Model.IdBo);
                    IEnumerable<Chapter> chapters = await listChapter;
                    List<Chapter> chapterList = chapters.ToList();
                    var kh = @HttpContextAccessor.HttpContext.Session.GetString("TK");
                    KhachHang khach = new KhachHang();
                    if (kh != null)
                    {
                        khach = await khachhangrepository.GetByAccountAsync(kh);
                    }

                    var idKh = khach?.IdKh;
                    var isPremium = khach?.TtPremium ?? false;
                    if (chapterList != null)
                    {
                        @foreach (var chap in chapterList)
                        {
                            if (chap.TtPemium == true)
                            {
                                <li>
                                    <a class="dropdown-item premium-chap" data-chapter-id="@chap.IdBo" data-chapter-stt="@chap.SttChap" data-idkh="@idKh" data-ispremium="@isPremium">
                                         chap @chap.SttChap - @chap.TenChap <img style="width:40px!important; height:15px!important; border-radius:0!important; right:0;" src="~/images/predark.png" />
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li><a class="dropdown-item" asp-action="Chapter" asp-route-id="@chap.IdBo" asp-route-stt="@chap.SttChap">chap @chap.SttChap - @chap.TenChap</a></li>
                            }
                        }
                    }
                    <script>

                        $(document).ready(function () {
                            $('#btn-follow').click(function (event) {
                                event.preventDefault();
                                var sessionTK = '@HttpContextAccessor.HttpContext.Session.GetString("TK")';
                                if (!sessionTK) {
                                    // Hiển thị form đăng nhập
                                    $('#loginOverlay').show();
                                    $('#loginForm').show();
                                } else {
                                    // AJAX call to follow chapter
                                    $.ajax({
                                        url: '@Url.Action("Follow", "KhachHang")',
                                        type: 'POST',
                                        data: {
                                            __RequestVerificationToken: '@Html.AntiForgeryToken()',
                                            id: '@Model.IdBo',
                                            stt: '@Model.SttChap'
                                        },
                                        success: function (response) {
                                            if (response.success) {
                                                alert('Bạn đã follow thành công!');
                                                location.reload();
                                            } else {
                                                alert('Lỗi khi follow, vui lòng thử lại');
                                            }
                                        },
                                        error: function () {
                                            alert('Không thể gửi yêu cầu. Vui lòng kiểm tra lại.');
                                        }
                                    });
                                }
                            });

                            $('.overlay').click(function () {
                                $(this).hide();
                                $('#loginForm').hide();
                            });

                            $('.close-btn').click(function () {
                                $('#loginOverlay').hide();
                                $('#loginForm').hide();
                            });
                        });
                    </script>
                }
            </ul>
        </div>
        @{
            var sttchapMax = @Model.SttChap + 1;
            var sttMax = ChapterRepository.GetEarliestByIdAsync(Model.IdBo);
            if (sttchapMax <= sttMax)
            {
                <a class="btn-next" asp-action="Chapter" asp-route-id="@Model.IdBo" asp-route-stt="@sttchapMax"><i class="ri-arrow-right-s-line"></i></a>
            }
        }
        @if (ViewBag.follow)
        {
            <a id="btn-unfollow" class="btn-follow" style="background-color: #FE0000; padding:.5rem; border-radius:5px;">
                <i class="ri-close-fill"></i>
                <span>Hủy Theo dõi</span>
            </a>
            <script>
                $(document).ready(function () {
                    $('#btn-unfollow').click(function (event) {
                        event.preventDefault();
                        $.ajax({
                            url: '@Url.Action("UnFollow", "KhachHang")',
                            type: 'POST',
                            data: {
                                __RequestVerificationToken: '@Html.AntiForgeryToken()',
                                id: '@Model.IdBo',
                                stt: '@Model.SttChap'
                            },
                            success: function (response) {
                                if (response.success) {
                                    alert('Lỗi Khi UnFollow, Vui lòng thử lại');
                                    location.reload();
                                } else {
                                    location.reload(true);
                                }
                            },
                            error: function () {
                                alert('Không thể gửi yêu cầu. Vui lòng kiểm tra lại.');
                            }
                        });
                    });
                });
            </script>
        }
        @if (ViewBag.follow == false)
        {
            <a id="btn-follow" class="btn-follow">
                <i class="fa-solid fa-heart"></i>
                <span> Theo dõi</span>
            </a>
            <script>
                $(document).ready(function () {
                    $('#btn-follow').click(function (event) {
                        event.preventDefault();
                        var sessionTK = '@HttpContextAccessor.HttpContext.Session.GetString("TK")';

                        if (sessionTK !== null && sessionTK !== '') {
                            $.ajax({
                                url: '@Url.Action("Follow", "KhachHang")',
                                type: 'POST',
                                data: {
                                    __RequestVerificationToken: '@Html.AntiForgeryToken()',
                                    id: '@Model.IdBo',
                                    stt: '@Model.SttChap'
                                },
                                success: function (response) {
                                    if (response.success) {
                                        alert('Lỗi Khi Follow, Vui lòng thử lại');
                                    } else {
                                        location.reload();
                                    }
                                },
                                error: function () {
                                    alert('Không thể gửi yêu cầu. Vui lòng kiểm tra lại.');
                                }
                            });
                        } else {
                            alert('Bạn cần đăng nhập để theo dõi bộ truyện');
                        }
                    });
                });
            </script>
        }
    </div>

    <div class="reading-detail containers">
        @{
            var listImage = ChapterRepository.GetAllCTByIdAsync(Model.IdBo, Model.SttChap);
            IEnumerable<CtChapter> list = await listImage;
            List<CtChapter> listCT = list.ToList();

            if (listCT != null)
            {
                foreach (var item in listCT)
                {
                    <div id="" class="page-chapter">
                        <img src="@item.AnhTrang" alt="trang @item.SoTrang">
                    </div>
                }
            }
            else
            {
                <script>
                    alert("error");
                </script>
            }
        }
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.9.0/slick.min.js" integrity="sha512-HGOnQO9+SP1V92SrtZfjqxxtLmVzqZpjFFekvzZVWoiASSQgSr4cw9Kqd2+l8Llp4Gm0G8GIFJ4ddwZilcdb8A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="/js/script.js"></script>



<script>
    let lastScrollTop = 0;
    const control = document.getElementById("control");
    window.addEventListener("scroll", function () {
        let currentScroll = window.pageYOffset || document.documentElement.scrollTop;

        if (currentScroll > lastScrollTop) {
            // Scroll down
            control.classList.add("hidden");
        } else {
            // Scroll up
            control.classList.remove("hidden");
        }
        lastScrollTop = currentScroll;
    });


    document.addEventListener('contextmenu', function (e) {
        e.preventDefault();
    }, false);

    document.onkeydown = function (e) {
        if (e.ctrlKey && (e.shiftKey && (e.keyCode == 73 || e.keyCode == 74)) || e.keyCode == 83 || e.keyCode == 80) {
            e.preventDefault();
        if (e.shiftKey && e.keyCode == 83) {
            e.preventDefault();
        }
    };

        var showBtn = document.getElementById('show');
        var container = document.querySelector('.container_pop');
        var overlay = document.querySelector('.overlay');
        overlay.addEventListener('click', function () {
            document.getElementById('show').checked = false;
            container.style.transform = 'translate(-50%, -50%) scale(0)';
            setTimeout(function () {
                container.style.display = 'none';
                overlay.style.display = 'none';
            }, 500);
        });
</script>