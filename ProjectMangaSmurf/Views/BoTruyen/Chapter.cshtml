@using ProjectMangaSmurf.Repository
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@inject IHttpContextAccessor HttpContextAccessor
@inject IChapterRepository ChapterRepository
@inject IboTruyenRepository boTruyenRepository
@inject IKhachHangRepository khachhangrepository
@model ProjectMangaSmurf.Models.Chapter

<link href="~/css/styleCT.css" rel="stylesheet" />
<link href="~/css/styleChapter.css" rel="stylesheet" />

<style>
    #global-loader{
        display:none!important;
    }
</style>


<div class="reading">
    <div class=" reading__container containers">
        <div class="links">
            <a class="home" asp-area="" asp-controller="BoTruyen" asp-action="Index"> <i class="ri-home-4-fill"></i> Trang chủ </a> / <a class="truyen" asp-action="CTBoTruyen" asp-route-id="@Model.IdBo">@Model.IdBo</a> / <a class="chapter" asp-action="Chapter" asp-route-id="@Model.IdBo" asp-route-stt="@Model.SttChap">Chap @Model.SttChap</a>
        </div>

        <div class="infor">
            <div class="detail">
                @{
                    var truyen = boTruyenRepository.GetByIdAsync(Model.IdBo);
                    if (truyen != null)
                    {
                        var demo = await truyen;
                        <h3 class="name">  @demo.TenBo - chap @Model.SttChap</h3>
                    }

                }

            </div>
            <span class="time">Cập nhật lúc: @Model.ThoiGian.ToString("hh:mm dd-MM-yyyy")</span>
            <h4 class="note">Nội dung: @Model.TenChap</h4>
            <div class="btn__error">
                <a asp-area="" asp-controller="Contact" asp-action="Index" class="error">Báo lỗi</a>
            </div>
        </div>

    </div>
    <div class="control" id="control">
        <a asp-area="" asp-controller="BoTruyen" asp-action="Index" class="btn-home"><i class="fa-solid fa-house"></i></a>
        <a asp-area="" asp-controller="BoTruyen" asp-action="CTBoTruyen" asp-route-id="@Model.IdBo" class="btn-home"><i class="fa-solid fa-bars"></i></a>
        @{
            var sttchapMin = @Model.SttChap - 1;
            if (sttchapMin >= 1)
            {
                <a class="btn-prev" asp-action="Chapter" asp-route-id="@Model.IdBo" asp-route-stt="@sttchapMin"><i class="ri-arrow-left-s-line"></i></a>
            }

        }
        

        <div class="dropdown">
            <a class="btn dropdown-btn" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Chap @Model.SttChap <i class="ri-arrow-down-s-line"></i>
            </a>

            <ul class="dropdown-menu">
                @{
                    var listChapter = ChapterRepository.GetAllByIdAsync(Model.IdBo);
                    int? ticket = 0;
                    IEnumerable<Chapter> chapters = await listChapter;
                    List<Chapter> chapterList = chapters.ToList();
                    var kh = @HttpContextAccessor.HttpContext.Session.GetString("TK");
                    KhachHang khach = new KhachHang();
                    if (kh != null)
                    {
                        khach = await khachhangrepository.GetByAccountAsync(kh);
                        ticket = khach.TicketSalary;
                    }
                    var idKh = khach?.IdUser;
                    var isPremium = khach?.ActivePremium ?? false;
                    if (chapterList != null)
                    {
                            @foreach (var chap in chapterList)
                        {
                            if (chap.TtPemium == true)
                            {
                                <li>
                                    <a class="dropdown-item premium-chap" data-chapter-id="@chap.IdBo" data-chapter-stt="@chap.SttChap" data-idkh="@idKh" data-ispremium="@isPremium">
                                        chap @chap.SttChap - @chap.TenChap <img style="width:40px!important; height:15px!important; border-radius:0!important; right:0;" src="~/images/predark.png" />
                                    </a>
                                </li>
                                <script defer>
                                    $(document).ready(function () {
                                        $(document).on('click', '.premium-chap', function (event) {
                                            var idKh = '@idKh';
                                            if (idKh.trim().length === 0) {

                                                const swalWithBootstrapButtons = Swal.mixin({
                                                    customClass: {
                                                        confirmButton: "btn btn-success",
                                                        cancelButton: "btn btn-danger mr-3"
                                                    },
                                                    buttonsStyling: false
                                                });
                                                swalWithBootstrapButtons.fire({
                                                    text: "Bạn cần đăng nhập để đọc nội dung này!",
                                                    icon: "warning",
                                                    showCancelButton: true,
                                                    confirmButtonText: "Login now!!",
                                                    cancelButtonText: "Cancel!",
                                                    reverseButtons: true
                                                }).then((result) => {
                                                    if (result.isConfirmed) {
                                                        window.location.href = '/KhachHang/login';
                                                    }
                                                });
                                            }
                                        });
                                    });
                                </script>
                            }
                            else
                            {
                                    <li><a class="dropdown-item" asp-action="Chapter" asp-route-id="@chap.IdBo" asp-route-stt="@chap.SttChap">chap @chap.SttChap - @chap.TenChap</a></li>
                            }
                        }
                    }
                }
            </ul>
            <script defer>
                $(document).ready(function () {
                    $(document).on('click', '.premium-chap', function (event) {
                        var chapId = $(this).data('chapter-id');
                        var chapStt = $(this).data('chapter-stt');
                        var idKh = '@idKh';
                        var isPremiumBool = '@isPremium';
                        var ticket = @ticket;
                        var cost = @Model.TicketCost;
                        if (idKh.trim().length > 0) {

                            if (isPremiumBool === 'True') {
                                if (ticket < @Model.TicketCost) {
                                    const swalWithBootstrapButtons = Swal.mixin({
                                        customClass: {
                                            confirmButton: "btn btn-success",
                                            cancelButton: "btn btn-danger mr-3"
                                        },
                                        buttonsStyling: false
                                    });
                                    swalWithBootstrapButtons.fire({
                                        text: " Có vẻ bạn cần mua thêm vé để đọc nội dung này !!",
                                        icon: "warning",
                                        showCancelButton: true,
                                        confirmButtonText: "Mua ngay!!",
                                        cancelButtonText: "Cancel!",
                                        reverseButtons: true
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            window.location.href = '/Payment/Index';
                                        }
                                    });
                                }
                                else {
                                    $.ajax({
                                        url: '@Url.Action("Chapter", "BoTruyen")',
                                        data: { id: chapId, stt: chapStt },
                                        success: function (response) {
                                            $('body').html(response);
                                            history.pushState({ path: this.url }, '', this.url);
                                        },
                                        error: function () {
                                            alert('Không thể gửi yêu cầu. Vui lòng kiểm tra lại.');
                                        }
                                    });
                                }

                            }
                            else {
                                const swalWithBootstrapButtons = Swal.mixin({
                                    customClass: {
                                        confirmButton: "btn btn-success",
                                        cancelButton: "btn btn-danger mr-3"
                                    },
                                    buttonsStyling: false
                                });
                                swalWithBootstrapButtons.fire({
                                    text: "Bạn cần đăng ký gói premium để đọc nội dung này!",
                                    imageUrl: "/images/denied2.png",
                                    imageWidth: 200,
                                    imageHeight: 200,
                                    imageAlt: "Custom image",
                                    showCancelButton: true,
                                    confirmButtonText: "Đăng ký ngay!!",
                                    cancelButtonText: "Cancel!",
                                    reverseButtons: true
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        window.location.href = '/Payment/Index';
                                    }
                                });
                            }
                        }

                    });
                });
            </script>
        </div>
        @{
            var sttchapMax = @Model.SttChap + 1;
            var sttMax = ChapterRepository.GetEarliestByIdAsync(Model.IdBo);
            if (sttchapMax <= sttMax)
            {
                <a class="btn-next" asp-action="Chapter" asp-route-id="@Model.IdBo" asp-route-stt="@sttchapMax"><i class="ri-arrow-right-s-line"></i></a>
            }
        }
        @if (ViewBag.follow)
        {
            <a id="btn-unfollow" class="btn-follow" style="background-color: #FE0000; padding:.3rem .5rem; border-radius:3px;">
                <i class="ri-close-fill"></i>
                <span>Hủy Theo dõi</span>
            </a>
            <script defer>
                $(document).ready(function () {
                    $('#btn-unfollow').click(function (event) {
                        event.preventDefault();
                        $.ajax({
                            url: '@Url.Action("UnFollow", "KhachHang")',
                            type: 'POST',
                            data: {
                                __RequestVerificationToken: '@Html.AntiForgeryToken()',
                                id: '@Model.IdBo',
                                stt: '@Model.SttChap'
                            },
                            success: function (response) {
                                if (response.success) {
                                    alert('Lỗi Khi UnFollow, Vui lòng thử lại');
                                    location.reload();
                                } else {
                                    location.reload(true);
                                }
                            },
                            error: function () {
                                alert('Không thể gửi yêu cầu. Vui lòng kiểm tra lại.');
                            }
                        });
                    });
                });
            </script>
        }
        @if (ViewBag.follow == false)
        {
            <a id="btn-follow" class="btn-follow">
                <i class="fa-solid fa-heart"></i>
                <span> Theo dõi</span>
            </a>
            
        }
    </div>

    <div class="reading-detail containers">
        @{
            var listImage = ChapterRepository.GetAllCTByIdAsync(Model.IdBo, Model.SttChap);
            IEnumerable<CtChapter> list = await listImage;
            List<CtChapter> listCT = list.ToList();

            if (listCT != null)
            {
                foreach (var item in listCT)
                {
                        <div id="" class="page-chapter">
                            <img loading="lazy" src="@item.AnhTrang" alt="trang @item.SoTrang">
                        </div>
                }
            }
            else
            {
                <script defer>
                        alert("error");
                </script>
            }
        }
    </div>

    <div class=" p-3 control mt-4 " style="gap:1.2rem;">
        @{
            if (sttchapMin >= 1)
            {
                <a class="btn-prev" asp-action="Chapter" asp-route-id="@Model.IdBo" asp-route-stt="@sttchapMin" style="padding: .3rem .8rem; font-size:1rem; font-weight:500;"><i class="ri-arrow-left-s-line"></i> Previous</a>
            }
            else
            {
                <a class="btn-prev" style="background-color: #8f8f8f;color: #000 !important; padding: .3rem .8rem; font-size:1rem; font-weight:500;"><i class="ri-arrow-left-s-line"></i> Previous</a>
            }

            if (sttchapMax <= sttMax)
            {
                <a class="btn-next" asp-action="Chapter" asp-route-id="@Model.IdBo" asp-route-stt="@sttchapMax" style="padding: .3rem .8rem; font-size:1rem; font-weight:500;"><i class="ri-arrow-right-s-line"></i> Next</a>
            }
            else
            {
                <a class="btn-prev" style="background-color: #8f8f8f;color: #000 !important; padding: .3rem .8rem; font-size:1rem; font-weight:500;"><i class="ri-arrow-right-s-line"></i> Next</a>
            }
        }

    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.9.0/slick.min.js" integrity="sha512-HGOnQO9+SP1V92SrtZfjqxxtLmVzqZpjFFekvzZVWoiASSQgSr4cw9Kqd2+l8Llp4Gm0G8GIFJ4ddwZilcdb8A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script defer>

    document.onkeydown = function (e) {
        if (e.ctrlKey && (e.shiftKey && (e.keyCode == 73 || e.keyCode == 74)) || e.keyCode == 83 || e.keyCode == 80) {
            e.preventDefault();
        if (e.shiftKey && e.keyCode == 83) {
            e.preventDefault();
        }
    };

        var showBtn = document.getElementById('show');
        var container = document.querySelector('.container_pop');
        var overlay = document.querySelector('.overlay');
        overlay.addEventListener('click', function () {
            document.getElementById('show').checked = false;
            container.style.transform = 'translate(-50%, -50%) scale(0)';
            setTimeout(function () {
                container.style.display = 'none';
                overlay.style.display = 'none';
            }, 500);
        });
</script>

<script defer>
    $(document).ready(function () {
        $('#btn-follow').click(function (event) {
            event.preventDefault();
            var sessionTK = '@HttpContextAccessor.HttpContext.Session.GetString("TK")';
            if (!sessionTK) {
                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: "btn btn-success",
                        cancelButton: "btn btn-danger mr-3"
                    },
                    buttonsStyling: false
                });
                swalWithBootstrapButtons.fire({
                    text: "Bạn cần đăng nhập để theo dõi bộ truyện!",
                    imageUrl: "/images/yuzu.png",
                    imageWidth: 180,
                    imageHeight: 90,
                    imageAlt: "Custom image",
                    showCancelButton: true,
                    confirmButtonText: "Login now!!",
                    cancelButtonText: "Cancel!",
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/KhachHang/login';
                    }
                });
            } else {
                // AJAX call to follow chapter
                $.ajax({
                    url: '@Url.Action("Follow", "KhachHang")',
                    type: 'POST',
                    data: {
                        __RequestVerificationToken: '@Html.AntiForgeryToken()',
                        id: '@Model.IdBo',
                        stt: '@Model.SttChap'
                    },
                    success: function (response) {
                        if (response.success) {
                            alert('Bạn đã follow thành công!');
                            location.reload();
                        } else {
                            Swal.fire({
                                position: "top-end",
                                icon: "success",
                                title: "Follow thành công bộ truyện",
                                showConfirmButton: false,
                                timer: 2500,
                                customClass: {
                                    popup: 'swal-top-margin'
                                }
                            }).then((result) => {
                                window.location.reload();
                            });
                        }
                    },
                    error: function () {
                        alert('Không thể gửi yêu cầu. Vui lòng kiểm tra lại.');
                    }
                });
            }
        });
    });

    let lastScrollTop = 0;
    const control = document.getElementById("control");
    window.addEventListener("scroll", function () {
        let currentScroll = window.pageXOffset || document.documentElement.scrollTop;

        if (currentScroll > lastScrollTop) {
            control.classList.add("hidden");
        } else {
            control.classList.remove("hidden");
        }
        lastScrollTop = currentScroll;
    });
</script>