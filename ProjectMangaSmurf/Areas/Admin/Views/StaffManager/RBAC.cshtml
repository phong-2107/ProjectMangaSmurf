@model IEnumerable<ProjectMangaSmurf.Models.PermissionsList>

@{
    ViewData["Title"] = "RBAC Permissions List";
}
<head>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
</head>
<style>
    .btn-custom {
        background-color: rebeccapurple;
        color: white;
        transition: all 0.3s;
    }

    .btn-active {
        background-color: magenta;
    }

    .action-button {
        margin-right: 5px;
        border: 0px solid #ccc;
        padding: 5px 10px;
        display: inline-block;
        color: white;
        cursor: pointer;
    }

    .btn-set-active {
        background-color: #28a745; /* Green */
        border-color: #28a745;
    }

    .btn-set-inactive {
        background-color: #dc3545; /* Red */
        border-color: #dc3545;
    }

    .btn-set-maintenance {
        background-color: #ffc107; /* Yellow */
        border-color: #ffc107;
    }

    .btn-set-stop {
        background-color: #17a2b8; /* Blue */
        border-color: #17a2b8;
    }

    .alert-info {
        color: #004085; /* Màu chữ xanh */
        background-color: #cce5ff; /* Nền màu xanh nhạt */
        border: 1px solid #b8daff; /* Viền màu xanh */
        padding: 10px;
        margin: 10px 0;
        border-radius: 5px; /* Bo góc cho khối thông báo */
    }
</style>

<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h2>
                <i class="fa-solid fa-circle-user"></i> LIST OF PERMISSIONS
            </h2>
            <h6>Manager - View - Edit Role-Base Controller </h6>
        </div>
        <div class="alert-info">
            Upload Status Directly Here
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Permission Type</th>
                        <th>Permission Name</th>
                        <th>Description</th>
                        <th>Status</th>
                        <th>Active</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.IdPermissions</td>
                                <td>@(item.ParentPermissions.HasValue ? item.ParentPermissions.Value.ToString() : "N/A")</td>
                                <td>@Html.DisplayFor(modelItem => item.PermissionsName)</td>
                                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                                <td>
                                    @switch (item.PermissionsStats)
                                    {
                                        case 1:
                                            <span class="text-success">Active</span>
                                            break;
                                        case 0:
                                            <span class="text-danger">Inactive</span>
                                            break;
                                        case 2:
                                            <span class="text-warning">Maintenance</span>
                                            break;
                                        default:
                                            <span class="text-secondary">Stop</span>
                                            break;
                                    }
                                </td>
                                <td>@(item.Active.HasValue ? (item.Active.Value ? "Yes" : "No") : "N/A")</td>
                                <td>
                                    <button class="action-button @(item.Active ?? false ? "btn-set-inactive" : "btn-set-active")" onclick="updateStatus('@item.IdPermissions', '@(item.Active ?? false ? "inactive" : "active")')">
                                        <i class="fa-solid fa-toggle-@(item.Active ?? false ? "off" : "on")"></i> @(item.Active ?? false ? "Set to Inactive" : "Set to Active")
                                    </button>
                                    <button class="action-button btn-set-maintenance" onclick="updateStatus('@item.IdPermissions', 'maintenance')">
                                        <i class="fa-solid fa-tools"></i> Set to Maintenance
                                    </button>
                                    <button class="action-button btn-set-stop" onclick="updateStatus('@item.IdPermissions', 'stop')">
                                        <i class="fa-solid fa-ban"></i> Set to Stop
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr><td colspan="7">No permissions found.</td></tr>
                    }
                </tbody>

            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateStatus(id, status) {
            Swal.fire({
                title: "Are you sure?",
                text: `You are about to set status to ${status}.`,
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, update it!",
                confirmButtonClass: "btn btn-primary",
                cancelButtonClass: "btn btn-danger ml-1",
                buttonsStyling: false
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/Admin/StaffManager/UpdateStatus`,
                        type: 'POST',
                        data: {
                            id: id,
                            status: status
                        },
                        success: function (response) {
                            Swal.fire(
                                'Updated!',
                                'Status has been updated.',
                                'success'
                            );
                            location.reload();
                        },
                        error: function (xhr, status, error) {
                            Swal.fire(
                                'Error!',
                                'Failed to update status.',
                                'error'
                            );
                            console.error(xhr.responseText);
                        }
                    });
                }
            });
        }
    </script>
}
