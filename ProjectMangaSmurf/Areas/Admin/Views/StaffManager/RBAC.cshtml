@model IEnumerable<ProjectMangaSmurf.Models.PermissionsList>

@{
    ViewData["Title"] = "RBAC Permissions List";
}
<head>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
</head>
<style>
    <style >
    .btn-custom {
        background-color: rebeccapurple;
        color: white;
        transition: all 0.3s;
    }

    .btn-active {
        background-color: magenta;
    }

    .action-button {
        margin-right: 5px;
        border: 0px solid #ccc; /* Default border for all buttons */
        padding: 5px 10px;
        display: inline-block; /* Align buttons in a row */
        color: white;
        cursor: pointer;
    }

    .btn-set-active {
        background-color: #28a745; /* Green */
        border-color: #28a745;
    }

    .btn-set-inactive {
        background-color: #dc3545; /* Red */
        border-color: #dc3545;
    }

    .btn-set-maintenance {
        background-color: #ffc107; /* Yellow */
        border-color: #ffc107;
    }

    .btn-set-stop {
        background-color: #17a2b8; /* Blue */
        border-color: #17a2b8;
    }

    .alert-info {
        color: #004085; /* Màu chữ xanh */
        background-color: #cce5ff; /* Nền màu xanh nhạt */
        border: 1px solid #b8daff; /* Viền màu xanh */
        padding: 10px;
        margin: 10px 0;
        border-radius: 5px; /* Bo góc cho khối thông báo */
    }
</style>

</style>

<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h2>
                <i class="fa-solid fa-circle-user"></i> LIST OF PERMISSIONS 
             </h2>
        <h6>Manager - View - Edit Role-Base Controller </h6> 
    </div>
        <div class="alert-info">
            Upload Status Directly Here 
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Permission Type</th>
                        <th>Permission Name</th>
                        <th>Description</th>
                        <th>Status</th>
                        <th>Active</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.IdPermissions</td>
                                <td>@(item.ParentPermissions.HasValue ? item.ParentPermissions.Value.ToString() : "N/A")</td>
                                <td>@Html.DisplayFor(modelItem => item.PermissionsName)</td>
                                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                                <td>
                                    @switch (item.PermissionsStats)
                                    {
                                        case 1:
                                            <span class="text-success">Active</span>
                                            break;
                                        case 0:
                                            <span class="text-danger">Inactive</span>
                                            break;
                                        case 2:
                                            <span class="text-warning">Maintenance</span>
                                            break;
                                        default:
                                            <span class="text-secondary">Stop</span>
                                            break;
                                    }
                                </td>
                                <td>@(item.Active.HasValue ? (item.Active.Value ? "Yes" : "No") : "N/A")</td>
                                <td>
                                    <form asp-action="SetActive" asp-route-id="@item.IdPermissions" method="post" style="display: inline;">
                                        <button type="submit" class="action-button btn-set-active">
                                            <i class="fa-solid fa-person-digging"></i> Set to Active
                                        </button>
                                    </form>
                                    <form asp-action="SetInactive" asp-route-id="@item.IdPermissions" method="post" style="display: inline;">
                                        <button type="submit" class="action-button btn-set-inactive">
                                            <i class="fa-regular fa-circle-stop"></i> Set to Inactive
                                        </button>
                                    </form>
                                    <form asp-action="SetMaintenance" asp-route-id="@item.IdPermissions" method="post" style="display: inline;">
                                        <button type="submit" class="action-button btn-set-maintenance">
                                            <i class="fa-solid fa-tools"></i> Set to Maintenance
                                        </button>
                                    </form>
                                    <form asp-action="SetStop" asp-route-id="@item.IdPermissions" method="post" style="display: inline;">
                                        <button type="submit" class="action-button btn-set-stop">
                                            <i class="fa-solid fa-ban"></i> Set to Stop
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr><td colspan="7">No permissions found.</td></tr>
                    }
                </tbody>

            </table>
        </div>
    </div>
</div>
<script>
    function handleSubmit(actionMessage) {
        // SweetAlert2 notification
        Swal.fire({
            title: 'Are you sure?',
            text: `${actionMessage} this permission?`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, proceed!'
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire(
                    'Updated!',
                    'The permission status has been updated.',
                    'success'
                );
                // Submit the form programmatically
                return true; // Allow form submission to continue
            } else {
                // If you want to prevent form submission on cancel
                Swal.fire(
                    'Cancelled',
                    'Your action has been cancelled',
                    'error'
                );
                return false; // This will stop the form from submitting
            }
        });

        // Prevent form from submitting immediately
        return false;
    }
</script>
