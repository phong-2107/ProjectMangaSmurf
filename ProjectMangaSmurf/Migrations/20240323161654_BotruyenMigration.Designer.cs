// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectMangaSmurf.Models;

#nullable disable

namespace ProjectMangaSmurf.Migrations
{
    [DbContext(typeof(MangaSmurfContext))]
    [Migration("20240323161654_BotruyenMigration")]
    partial class BotruyenMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectMangaSmurf.Models.BoTruyen", b =>
                {
                    b.Property<string>("IdBo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("id_bo")
                        .IsFixedLength();

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("AnhBanner")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("anh_banner");

                    b.Property<string>("AnhBia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("anh_bia");

                    b.Property<byte>("Dotuoi")
                        .HasColumnType("tinyint")
                        .HasColumnName("dotuoi");

                    b.Property<string>("IdLoai")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("id_loai")
                        .IsFixedLength();

                    b.Property<string>("IdTg")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("id_tg")
                        .IsFixedLength();

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mota");

                    b.Property<string>("TenBo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ten_bo");

                    b.Property<double>("TkDanhgia")
                        .HasColumnType("float")
                        .HasColumnName("tk_danhgia");

                    b.Property<int>("TkTheodoi")
                        .HasColumnType("int")
                        .HasColumnName("tk_theodoi");

                    b.Property<int>("TongLuotXem")
                        .HasColumnType("int")
                        .HasColumnName("TongLuotXem");

                    b.Property<byte>("TrangThai")
                        .HasColumnType("tinyint")
                        .HasColumnName("trang_thai");

                    b.Property<bool>("TtPemium")
                        .HasColumnType("bit")
                        .HasColumnName("tt_pemium");

                    b.HasKey("IdBo");

                    b.HasIndex("IdTg");

                    b.ToTable("BoTruyen", (string)null);
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.Chapter", b =>
                {
                    b.Property<int>("SttChap")
                        .HasColumnType("int")
                        .HasColumnName("stt_chap");

                    b.Property<string>("IdBo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("id_bo")
                        .IsFixedLength();

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("TenChap")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ten_chap");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime")
                        .HasColumnName("thoi_gian");

                    b.Property<int>("TkLuotxem")
                        .HasColumnType("int")
                        .HasColumnName("tk_luotxem");

                    b.Property<bool>("TtPemium")
                        .HasColumnType("bit")
                        .HasColumnName("tt_pemium");

                    b.HasKey("SttChap", "IdBo");

                    b.HasIndex("IdBo");

                    b.ToTable("Chapter", (string)null);
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.CtBoTruyen", b =>
                {
                    b.Property<string>("IdKh")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("id_kh")
                        .IsFixedLength();

                    b.Property<string>("IbBo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("ib_bo")
                        .IsFixedLength();

                    b.Property<byte>("DanhGia")
                        .HasColumnType("tinyint")
                        .HasColumnName("danh gia");

                    b.Property<string>("LsMoi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ls_moi");

                    b.Property<bool>("Theodoi")
                        .HasColumnType("bit")
                        .HasColumnName("theodoi");

                    b.HasKey("IdKh", "IbBo");

                    b.HasIndex("IbBo");

                    b.ToTable("CT_BoTruyen", (string)null);
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.CtChapter", b =>
                {
                    b.Property<int>("SoTrang")
                        .HasColumnType("int")
                        .HasColumnName("so_trang");

                    b.Property<int>("SttChap")
                        .HasColumnType("int")
                        .HasColumnName("stt_chap");

                    b.Property<string>("IdBo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("id_bo")
                        .IsFixedLength();

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("AnhTrang")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("anh_trang");

                    b.HasKey("SoTrang", "SttChap", "IdBo");

                    b.HasIndex("SttChap", "IdBo");

                    b.ToTable("CT_Chapter", (string)null);
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.CtHoatDong", b =>
                {
                    b.Property<string>("IdKh")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("id_kh")
                        .IsFixedLength();

                    b.Property<int>("SttChap")
                        .HasColumnType("int")
                        .HasColumnName("stt_chap");

                    b.Property<string>("IdBo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("id_bo")
                        .IsFixedLength();

                    b.Property<bool?>("TtDoc")
                        .HasColumnType("bit")
                        .HasColumnName("tt_doc");

                    b.HasKey("IdKh", "SttChap", "IdBo");

                    b.HasIndex("SttChap", "IdBo");

                    b.ToTable("CT_HoatDong", (string)null);
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.CtLoaiTruyen", b =>
                {
                    b.Property<string>("IdLoai")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("id_loai")
                        .IsFixedLength();

                    b.Property<string>("IdBo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("id_bo")
                        .IsFixedLength();

                    b.Property<string>("LoaiChinh")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.HasKey("IdLoai", "IdBo");

                    b.HasIndex("IdBo");

                    b.ToTable("CT_LoaiTruyen", (string)null);
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.Footer", b =>
                {
                    b.Property<string>("Dieukhoan")
                        .HasColumnType("text")
                        .HasColumnName("dieukhoan");

                    b.Property<string>("Giayphep")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("giayphep");

                    b.Property<string>("LinkDiscord")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("link_discord");

                    b.Property<string>("LinkFb")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("link_fb");

                    b.Property<string>("LinkIns")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("link_ins");

                    b.Property<string>("LinkX")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("link_x");

                    b.Property<string>("Noidung")
                        .HasColumnType("text")
                        .HasColumnName("noidung");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.ToTable("Footer", (string)null);
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.HopDong", b =>
                {
                    b.Property<string>("IdHd")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("id_hd")
                        .IsFixedLength();

                    b.Property<decimal>("GtThanhtoan")
                        .HasColumnType("decimal(6, 0)")
                        .HasColumnName("gt_thanhtoan");

                    b.Property<string>("IdKh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("id_kh")
                        .IsFixedLength();

                    b.Property<DateTime>("Ngaylap")
                        .HasColumnType("datetime")
                        .HasColumnName("ngaylap");

                    b.HasKey("IdHd");

                    b.HasIndex("IdKh");

                    b.ToTable("HopDong", (string)null);
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.KhachHang", b =>
                {
                    b.Property<string>("IdKh")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("id_kh")
                        .IsFixedLength();

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("email");

                    b.Property<string>("LienketFb")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("lienket_fb");

                    b.Property<string>("LienketGg")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("lienket_gg");

                    b.Property<string>("Matkhau")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("matkhau");

                    b.Property<string>("Sdt")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("sdt")
                        .IsFixedLength();

                    b.Property<string>("Taikhoan")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("taikhoan");

                    b.Property<string>("TenKh")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ten_kh");

                    b.Property<bool>("TtPremium")
                        .HasColumnType("bit")
                        .HasColumnName("tt_premium");

                    b.HasKey("IdKh");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.LoaiTruyen", b =>
                {
                    b.Property<string>("IdLoai")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("id_loai")
                        .IsFixedLength();

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ten_loai");

                    b.HasKey("IdLoai");

                    b.ToTable("LoaiTruyen", (string)null);
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.NhanVien", b =>
                {
                    b.Property<string>("IdNv")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("id_nv")
                        .IsFixedLength();

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<bool>("LoaiNv")
                        .HasColumnType("bit")
                        .HasColumnName("loai_nv");

                    b.Property<string>("Matkhau")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("matkhau");

                    b.Property<string>("Taikhoan")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("taikhoan");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ten");

                    b.HasKey("IdNv");

                    b.ToTable("NhanVien", (string)null);
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.Premium", b =>
                {
                    b.Property<bool?>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<decimal?>("GiaThanh")
                        .HasColumnType("decimal(6, 0)")
                        .HasColumnName("gia_thanh");

                    b.ToTable("Premium", (string)null);
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.TacGium", b =>
                {
                    b.Property<string>("IdTg")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("id_tg")
                        .IsFixedLength();

                    b.Property<bool?>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("TenTg")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ten_tg");

                    b.HasKey("IdTg");

                    b.ToTable("TacGia");
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.BoTruyen", b =>
                {
                    b.HasOne("ProjectMangaSmurf.Models.TacGium", "IdTgNavigation")
                        .WithMany("BoTruyens")
                        .HasForeignKey("IdTg")
                        .IsRequired()
                        .HasConstraintName("FK_BoTruyen_TacGia");

                    b.Navigation("IdTgNavigation");
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.Chapter", b =>
                {
                    b.HasOne("ProjectMangaSmurf.Models.BoTruyen", "IdBoNavigation")
                        .WithMany("Chapters")
                        .HasForeignKey("IdBo")
                        .IsRequired()
                        .HasConstraintName("FK_Chapter_BoTruyen");

                    b.Navigation("IdBoNavigation");
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.CtBoTruyen", b =>
                {
                    b.HasOne("ProjectMangaSmurf.Models.BoTruyen", "IbBoNavigation")
                        .WithMany("CtBoTruyens")
                        .HasForeignKey("IbBo")
                        .IsRequired()
                        .HasConstraintName("FK_CT_BoTruyen_BoTruyen");

                    b.HasOne("ProjectMangaSmurf.Models.KhachHang", "IdKhNavigation")
                        .WithMany("CtBoTruyens")
                        .HasForeignKey("IdKh")
                        .IsRequired()
                        .HasConstraintName("FK_CT_BoTruyen_KhachHang");

                    b.Navigation("IbBoNavigation");

                    b.Navigation("IdKhNavigation");
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.CtChapter", b =>
                {
                    b.HasOne("ProjectMangaSmurf.Models.Chapter", "Chapter")
                        .WithMany("CtChapters")
                        .HasForeignKey("SttChap", "IdBo")
                        .IsRequired()
                        .HasConstraintName("FK_CT_Chapter_Chapter");

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.CtHoatDong", b =>
                {
                    b.HasOne("ProjectMangaSmurf.Models.KhachHang", "IdKhNavigation")
                        .WithMany("CtHoatDongs")
                        .HasForeignKey("IdKh")
                        .IsRequired()
                        .HasConstraintName("FK_CT_HoatDong_KhachHang");

                    b.HasOne("ProjectMangaSmurf.Models.Chapter", "Chapter")
                        .WithMany("CtHoatDongs")
                        .HasForeignKey("SttChap", "IdBo")
                        .IsRequired()
                        .HasConstraintName("FK_CT_HoatDong_Chapter");

                    b.Navigation("Chapter");

                    b.Navigation("IdKhNavigation");
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.CtLoaiTruyen", b =>
                {
                    b.HasOne("ProjectMangaSmurf.Models.BoTruyen", "IdBoNavigation")
                        .WithMany("CtLoaiTruyens")
                        .HasForeignKey("IdBo")
                        .IsRequired()
                        .HasConstraintName("FK_CT_LoaiTruyen_BoTruyen");

                    b.HasOne("ProjectMangaSmurf.Models.LoaiTruyen", "IdLoaiNavigation")
                        .WithMany("CtLoaiTruyens")
                        .HasForeignKey("IdLoai")
                        .IsRequired()
                        .HasConstraintName("FK_CT_LoaiTruyen_LoaiTruyen");

                    b.Navigation("IdBoNavigation");

                    b.Navigation("IdLoaiNavigation");
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.HopDong", b =>
                {
                    b.HasOne("ProjectMangaSmurf.Models.KhachHang", "IdKhNavigation")
                        .WithMany("HopDongs")
                        .HasForeignKey("IdKh")
                        .IsRequired()
                        .HasConstraintName("FK_HopDong_KhachHang");

                    b.Navigation("IdKhNavigation");
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.BoTruyen", b =>
                {
                    b.Navigation("Chapters");

                    b.Navigation("CtBoTruyens");

                    b.Navigation("CtLoaiTruyens");
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.Chapter", b =>
                {
                    b.Navigation("CtChapters");

                    b.Navigation("CtHoatDongs");
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.KhachHang", b =>
                {
                    b.Navigation("CtBoTruyens");

                    b.Navigation("CtHoatDongs");

                    b.Navigation("HopDongs");
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.LoaiTruyen", b =>
                {
                    b.Navigation("CtLoaiTruyens");
                });

            modelBuilder.Entity("ProjectMangaSmurf.Models.TacGium", b =>
                {
                    b.Navigation("BoTruyens");
                });
#pragma warning restore 612, 618
        }
    }
}
